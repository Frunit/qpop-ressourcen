#!/usr/bin/env python3

'''
Versucht alle .DAT-Dateien im aktuellen Ordner in png umzuwandeln.

Ben√∂tigt Pillow

Erzeugt PNG-Dateien

python3 extract_pictures.py
'''

from PIL import Image
from glob import glob
import os

offset = 40


# Palette
p = [0, 0, 0, 130, 0, 0, 0, 130, 0, 130, 130, 0, 0, 0, 130, 130, 0, 130, 0, 130, 130, 195, 195, 195, 195, 223, 195, 166, 203, 243, 16, 16, 16, 28, 28, 28, 44, 44, 44, 56, 56, 56, 73, 73, 73, 89, 89, 89, 101, 101, 101, 117, 117, 117, 134, 134, 134, 146, 146, 146, 162, 162, 162, 174, 174, 174, 190, 190, 190, 207, 207, 207, 219, 219, 219, 235, 235, 235, 251, 251, 251, 0, 0, 251, 0, 0, 211, 0, 0, 174, 0, 0, 134, 0, 0, 97, 0, 0, 56, 0, 0, 20, 0, 24, 0, 20, 20, 32, 65, 20, 32, 109, 20, 32, 154, 20, 32, 199, 20, 32, 243, 20, 32, 20, 20, 85, 65, 20, 85, 109, 20, 85, 154, 20, 85, 199, 20, 85, 243, 20, 85, 20, 20, 138, 65, 20, 138, 109, 20, 138, 154, 20, 138, 199, 20, 138, 243, 20, 138, 20, 20, 190, 65, 20, 190, 109, 20, 190, 154, 20, 190, 199, 20, 190, 243, 20, 190, 20, 20, 243, 65, 20, 243, 109, 20, 243, 154, 20, 243, 199, 20, 243, 243, 20, 243, 251, 0, 251, 0, 69, 0, 20, 65, 32, 65, 65, 32, 109, 65, 32, 154, 65, 32, 199, 65, 32, 243, 65, 32, 20, 65, 85, 65, 65, 85, 109, 65, 85, 154, 65, 85, 199, 65, 85, 243, 65, 85, 20, 65, 138, 65, 65, 138, 109, 65, 138, 154, 65, 138, 199, 65, 138, 243, 65, 138, 20, 65, 190, 65, 65, 190, 109, 65, 190, 154, 65, 190, 199, 65, 190, 243, 65, 190, 20, 65, 243, 65, 65, 243, 109, 65, 243, 154, 65, 243, 199, 65, 243, 243, 65, 243, 203, 0, 203, 0, 113, 0, 20, 109, 32, 65, 109, 32, 109, 109, 32, 154, 109, 32, 199, 109, 32, 243, 109, 32, 20, 109, 85, 65, 109, 85, 109, 109, 85, 154, 109, 85, 199, 109, 85, 243, 109, 85, 20, 109, 138, 65, 109, 138, 109, 109, 138, 154, 109, 138, 199, 109, 138, 243, 109, 138, 20, 109, 190, 65, 109, 190, 109, 109, 190, 154, 109, 190, 199, 109, 190, 243, 109, 190, 20, 109, 243, 65, 109, 243, 109, 109, 243, 154, 109, 243, 199, 109, 243, 243, 109, 243, 158, 0, 158, 0, 158, 0, 20, 154, 32, 65, 154, 32, 109, 154, 32, 154, 154, 32, 199, 154, 32, 243, 154, 32, 20, 154, 85, 65, 154, 85, 109, 154, 85, 154, 154, 85, 199, 154, 85, 243, 154, 85, 20, 154, 138, 65, 154, 138, 109, 154, 138, 154, 154, 138, 199, 154, 138, 243, 154, 138, 20, 154, 190, 65, 154, 190, 109, 154, 190, 154, 154, 190, 199, 154, 190, 243, 154, 190, 20, 154, 243, 65, 154, 243, 109, 154, 243, 154, 154, 243, 199, 154, 243, 243, 154, 243, 113, 0, 113, 0, 207, 0, 20, 199, 32, 65, 199, 32, 109, 199, 32, 154, 199, 32, 199, 199, 32, 243, 199, 32, 20, 199, 85, 65, 199, 85, 109, 199, 85, 154, 199, 85, 199, 199, 85, 243, 199, 85, 20, 199, 138, 65, 199, 138, 109, 199, 138, 154, 199, 138, 199, 199, 138, 243, 199, 138, 20, 199, 190, 65, 199, 190, 109, 199, 190, 154, 199, 190, 199, 199, 190, 243, 199, 190, 20, 199, 243, 65, 199, 243, 109, 199, 243, 154, 199, 243, 199, 199, 243, 243, 199, 243, 69, 0, 69, 0, 251, 0, 20, 243, 32, 65, 243, 32, 109, 243, 32, 154, 243, 32, 199, 243, 32, 243, 243, 32, 20, 243, 85, 65, 243, 85, 109, 243, 85, 154, 243, 85, 199, 243, 85, 243, 243, 85, 20, 243, 138, 65, 243, 138, 109, 243, 138, 154, 243, 138, 199, 243, 138, 243, 243, 138, 20, 243, 190, 65, 243, 190, 109, 243, 190, 154, 243, 190, 199, 243, 190, 243, 243, 190, 20, 243, 243, 65, 243, 243, 109, 243, 243, 154, 243, 243, 199, 243, 243, 243, 243, 243, 20, 0, 20, 20, 20, 0, 56, 56, 0, 97, 97, 0, 134, 134, 0, 174, 174, 0, 211, 211, 0, 251, 251, 0, 24, 0, 0, 52, 0, 0, 81, 0, 0, 109, 0, 0, 138, 0, 0, 166, 0, 0, 195, 0, 0, 223, 0, 0, 251, 0, 0, 0, 24, 24, 0, 56, 56, 0, 89, 89, 0, 130, 130, 255, 251, 243, 162, 162, 166, 130, 130, 130, 255, 0, 0, 0, 255, 0, 255, 255, 0, 0, 0, 255, 255, 0, 255, 0, 255, 255, 255, 255, 255]


for fn in glob('*.DAT'):
	basename = os.path.basename(fn)

	raw = open(fn, 'rb').read()

	width = int.from_bytes(raw[4:6], byteorder='little', signed=False)
	height = int.from_bytes(raw[8:10], byteorder='little', signed=False)

	if width < 5 or height < 5:
		print(fn, width, height)
		continue

	img_data = raw[offset:]
	img_size = (width, height)

	# Use the PIL raw decoder to read the data.
	try:
		img = Image.frombytes('P', img_size, img_data, 'raw', 'P', 0, -1)
	except ValueError:
		print('ValueError', fn)
		continue
	img.putpalette(p)

	img.convert('RGBA').save('{}.png'.format(basename))
